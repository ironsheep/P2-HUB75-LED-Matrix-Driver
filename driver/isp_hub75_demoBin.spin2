'' =================================================================================================
''
''   File....... isp_hub75_demo.spin2
''   Purpose.... Top-level Demonstration - showing off our HUB75 matrix
''   Authors.... Stephen M Moraco
''               -- Copyright (c) 2020 Iron Sheep Productions, LLC
''               -- see below for terms of use
''   E-mail..... stephen@ironsheep.biz
''   Started.... Oct 2020
''   Updated.... 17 Oct 2020
''
'' =================================================================================================


CON { timing }

  CLK_FREQ = 335_000_000                                        ' system freq as a constant
  _clkfreq = CLK_FREQ                                           ' set system clock

CON { DEBUG PINs }

'DEBUG_PIN = 16

VAR

    long    cog
    long    segmentPeriod
    long    digitPeriod
    long    digitVal
    long    digitIndex
    long    hours
    long    minutes
    long    seconds

OBJ

    color       : "isp_hub75_color"
    screen      : "isp_hub75_screenAccess"
    clock       : "isp_hub75_binClock"

PUB start() : ok

    '' run demo - counting clock in dec or hex

    digitPeriod := 3    ' 12 
    segmentPeriod := 0  ' was 5

    binaryClockDemo()
    'allDigitsDemo()

PUB binaryClockDemo() | red, green, blue
    ''  BINARY DEMO -> heading to liquid binary
    clock.setOnOffColors(color.cBlue, $363636)
    clock.setupClock(clock.BASE_DECIMAL_DIGITS)

    wait100thSecs(digitPeriod)

    repeat red from 0 to 23
        repeat green from 0 to 59
            repeat blue from 0 to 59

                clock.setTimeHMS(red, green, blue)

                wait100thSecs(digitPeriod)

    clock.setTimeHMS(0, 0, 0)
    wait100thSecs(digitPeriod)


PUB allDigitsDemo() | red, green, blue, bitValue
    ''  BINARY DEMO -> base 16 clocking all digits at same time
    clock.setOnOffColors(color.cBlue, $363636)
    clock.setupClock(clock.BASE_HEX_DIGITS)

    wait100thSecs(digitPeriod)

    repeat bitValue from 0 to 15
                blue := (bitValue << 4) | bitValue
                red := green := blue

                clock.setTimeHMS(red, green, blue)

                wait100thSecs(digitPeriod)

    clock.setTimeHMS(0, 0, 0)
    wait100thSecs(digitPeriod)

PUB wait100thSecs(count)
    repeat count
        waitms(10)  ' 1/100 seconds

CON { license }

{{


 -------------------------------------------------------------------------------------------------
  MIT License

  Copyright (c) 2020 Iron Sheep Productions, LLC

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
 =================================================================================================
}}

